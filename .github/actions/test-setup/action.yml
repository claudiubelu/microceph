name: MicroCeph Test Common Setup
description: Common setup steps for MicroCeph testing

inputs:
  skip-install-dependencies:
    description: Skip the installation of dependencies.
    required: false
    default: "false"

  container-network-name:
    description: Container network name for create_containers. Skipped if empty.
    required: false
    default: "public"

  install-microceph-parameter:
    description: Parameter to be used for the "Install microceph" step. Skipped if empty.
    required: false
    default: "install_multinode"

  ceph-release:
    description: Ceph release to be installed from the store. Skipped if empty.
    required: false
    default: ""

  bootstrap-parameters:
    description: Space-separated parameters to be used for the "Bootstrap" step. Skipped if empty.
    required: false
    default: "bootstrap_head"

  setup-cluster-parameters:
    description: Space-separated parameters to be used for the "Setup cluster" step. Skipped if empty.
    required: false
    default: "cluster_nodes"

  osd-count:
    description: Number of OSDs to add. Skipped if 0.
    required: false
    default: 0

runs:
  using: "composite"
  steps:
    - name: Download snap
      uses: actions/download-artifact@v4
      with:
        name: snaps
        path: /home/runner

    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Copy utils
      run: cp tests/scripts/actionutils.sh $HOME

    - name: Clear FORWARD firewall rules
      run: ~/actionutils.sh cleaript

    - name: Free disk
      run: ~/actionutils.sh free_runner_disk

    - name: Install dependencies
      if: inputs.skip-install-dependencies != "true"
      run: ~/actionutils.sh setup_lxd

    - name: Create containers with loopback devices
      if: inputs.container-network-name != ""
      run: ~/actionutils.sh create_containers ${{ inputs.container-network-name }}

    - name: Install local microceph snap
      if: inputs.install-microceph-parameter != ""
      run: ~/actionutils.sh ${{ inputs.install-microceph-parameter }}

    - name: Install ceph release from store
      if: inputs.ceph-release != ""
      run: ~/actionutils.sh install_store ${{ inputs.ceph-release }}

    - name: Bootstrap
      if: inputs.bootstrap-cluster-parameters != ""
      run: ~/actionutils.sh ${{ inputs.bootstrap-parameters }}

    - name: Setup cluster
      if: inputs.setup-cluster-parameters != ""
      run: ~/actionutils.sh ${{ inputs.setup-cluster-parameters }}

    - name: Add and wait for OSDs
      if: inputs.osd-count != 0
      run: |
        set -uex
        for i in $(seq 0 $[${{ inputs.osd-count }} - 1]) ; do
          ~/actionutils.sh add_osd_to_node "node-wrk$i"
        done
        ~/actionutils.sh headexec wait_for_osds ${{ inputs.osd-count }}
